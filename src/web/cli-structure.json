{
  "children": {
    "COMMAND": {
      "auth": {
        "children": {
          "COMMAND": {
            "login": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": null,
                    "description": "help for login",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai auth login [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "Login to the FlexAI service",
              "name": "login",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Login to the FlexAI service to authenticate and access the service.\n\nUsage:\n  flexai auth login [flags]\n\nFlags:\n  -h, --help   help for login\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "auth",
              "parent_header": "Available Commands"
            },
            "logout": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": null,
                    "description": "help for logout",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai auth logout [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "Signs you out of your account.",
              "name": "logout",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Signs you out of your account on this computer.\n\nUsage:\n  flexai auth logout [flags]\n\nFlags:\n  -h, --help   help for logout\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "auth",
              "parent_header": "Available Commands"
            }
          },
          "FLAG": [
            {
              "data_type": null,
              "description": "help for auth",
              "long": "--help",
              "parent_header": "Flags",
              "short": "-h"
            },
            {
              "data_type": null,
              "description": "enable verbose logging",
              "long": "--verbose",
              "parent_header": "Global Flags",
              "short": "-v"
            }
          ],
          "OTHER": [
            {
              "components": [
                {
                  "alternatives": [],
                  "children": [
                    {
                      "alternatives": [],
                      "children": [],
                      "component_type": "Keyword",
                      "key_value": false,
                      "name": "command",
                      "repeatable": false,
                      "required": true
                    }
                  ],
                  "component_type": "Group",
                  "key_value": false,
                  "name": "",
                  "repeatable": false,
                  "required": false
                }
              ],
              "line_contents": "flexai auth [command]",
              "parent_header": "Usage"
            }
          ],
          "USAGE": []
        },
        "description": "Manage authentication operations",
        "name": "auth",
        "outputs": {
          "help_page": {
            "status": 0,
            "stderr": "",
            "stdout": "Manage authentication operations including logging in and out.\n\nUsage:\n  flexai auth [command]\n\nAvailable Commands:\n  login       Login to the FlexAI service\n  logout      Signs you out of your account.\n\nFlags:\n  -h, --help   help for auth\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging\n\nUse \"flexai auth [command] --help\" for more information about a command."
          }
        },
        "parent": "flexai",
        "parent_header": "General"
      },
      "checkpoint": {
        "children": {
          "COMMAND": {
            "delete": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": null,
                    "description": "help for delete",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "NAME",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai checkpoint delete NAME [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "Deletes a checkpoint",
              "name": "delete",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Deletes a checkpoint\n\nUsage:\n  flexai checkpoint delete NAME [flags]\n\nFlags:\n  -h, --help   help for delete\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "checkpoint",
              "parent_header": "Available Commands"
            },
            "export": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": "string",
                    "description": "Destination path in the storage provider (required)",
                    "long": "--destination-path",
                    "parent_header": "Flags",
                    "short": "-d"
                  },
                  {
                    "data_type": null,
                    "description": "help for export",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": "string",
                    "description": "Name of the storage provider (required)",
                    "long": "--storage-provider",
                    "parent_header": "Flags",
                    "short": "-s"
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "CHECKPOINT_ID",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Flag",
                        "key_value": false,
                        "name": "--storage-provider",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "PROVIDER_NAME",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Flag",
                        "key_value": false,
                        "name": "--destination-path",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "PATH",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai checkpoint export CHECKPOINT_ID --storage-provider PROVIDER_NAME --destination-path PATH [flags]",
                    "parent_header": "Usage"
                  },
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "#",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "Export",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "a",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "checkpoint",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "to",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "a",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "storage",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "provider",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "with",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "destination",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "path",
                        "repeatable": false,
                        "required": true
                      }
                    ],
                    "line_contents": "# Export a checkpoint to a storage provider with destination path",
                    "parent_header": "Examples"
                  },
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "123e4567-e89b-12d3-a456-426614174000",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Flag",
                        "key_value": false,
                        "name": "--storage-provider",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "aws-s3",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Flag",
                        "key_value": false,
                        "name": "--destination-path",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "models/checkpoints/",
                        "repeatable": false,
                        "required": true
                      }
                    ],
                    "line_contents": "flexai checkpoint export 123e4567-e89b-12d3-a456-426614174000 --storage-provider aws-s3 --destination-path models/checkpoints/",
                    "parent_header": "Examples"
                  }
                ],
                "USAGE": []
              },
              "description": "Export a checkpoint to a storage provider",
              "name": "export",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Export a checkpoint to a specified storage provider with a destination path.\nThe CHECKPOINT_ID must be a valid UUID of an existing checkpoint.\n\nUsage:\n  flexai checkpoint export CHECKPOINT_ID --storage-provider PROVIDER_NAME --destination-path PATH [flags]\n\nExamples:\n  # Export a checkpoint to a storage provider with destination path\n  flexai checkpoint export 123e4567-e89b-12d3-a456-426614174000 --storage-provider aws-s3 --destination-path models/checkpoints/\n\nFlags:\n  -d, --destination-path string   Destination path in the storage provider (required)\n  -h, --help                      help for export\n  -s, --storage-provider string   Name of the storage provider (required)\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "checkpoint",
              "parent_header": "Available Commands"
            },
            "fetch": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": "string",
                    "description": "Destination directory to save the checkpoint (default \".\")",
                    "long": "--destination",
                    "parent_header": "Flags",
                    "short": "-d"
                  },
                  {
                    "data_type": null,
                    "description": "help for fetch",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "NAME",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai checkpoint fetch NAME [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "Fetch a checkpoint",
              "name": "fetch",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Fetch a Checkpoint by specifying its name or ID.\n\nUsage:\n  flexai checkpoint fetch NAME [flags]\n\nFlags:\n  -d, --destination string   Destination directory to save the checkpoint (default \".\")\n  -h, --help                 help for fetch\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "checkpoint",
              "parent_header": "Available Commands"
            },
            "inspect": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": null,
                    "description": "help for inspect",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "Output in JSON format",
                    "long": "--json",
                    "parent_header": "Flags",
                    "short": null
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "NAME",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai checkpoint inspect NAME [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "Inspect a checkpoint",
              "name": "inspect",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Get more details about a checkpoint by specifying its name or ID.\n\nUsage:\n  flexai checkpoint inspect NAME [flags]\n\nFlags:\n  -h, --help   help for inspect\n      --json   Output in JSON format\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "checkpoint",
              "parent_header": "Available Commands"
            },
            "list": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": null,
                    "description": "help for list",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai checkpoint list [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "List checkpoints",
              "name": "list",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "List all checkpoints and their metadata.\n\nUsage:\n  flexai checkpoint list [flags]\n\nFlags:\n  -h, --help   help for list\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "checkpoint",
              "parent_header": "Available Commands"
            },
            "push": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": "stringArray",
                    "description": "Key/Value pair representing the source and the destination file paths '<fcs_dataset_path>=<path_on_filesystem>' (<fcs_dataset_path> is optional)",
                    "long": "--file",
                    "parent_header": "Flags",
                    "short": "-f"
                  },
                  {
                    "data_type": null,
                    "description": "help for push",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": "string",
                    "description": "Path to the bucket/directory to use as Checkpoint source. Only required when using a Remote Storage Provider Connection, e.g. data-sets/files/wav-files",
                    "long": "--source-path",
                    "parent_header": "Flags",
                    "short": null
                  },
                  {
                    "data_type": "string",
                    "description": "Name of the Remote Storage Provider Connection to use",
                    "long": "--storage-provider",
                    "parent_header": "Flags",
                    "short": null
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "NAME",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [
                              {
                                "alternatives": [],
                                "children": [],
                                "component_type": "Flag",
                                "key_value": false,
                                "name": "--file",
                                "repeatable": false,
                                "required": true
                              },
                              {
                                "alternatives": [],
                                "children": [],
                                "component_type": "Argument",
                                "key_value": true,
                                "name": "<path_on_filesystem>=<checkpoint_path>",
                                "repeatable": false,
                                "required": true
                              },
                              {
                                "alternatives": [],
                                "children": [],
                                "component_type": "Keyword",
                                "key_value": false,
                                "name": "",
                                "repeatable": true,
                                "required": true
                              }
                            ],
                            "children": [],
                            "component_type": "AlternativeGroup",
                            "key_value": false,
                            "name": "",
                            "repeatable": true,
                            "required": true
                          },
                          {
                            "alternatives": [
                              {
                                "alternatives": [],
                                "children": [],
                                "component_type": "Flag",
                                "key_value": false,
                                "name": "--storage-provider",
                                "repeatable": false,
                                "required": true
                              },
                              {
                                "alternatives": [],
                                "children": [],
                                "component_type": "Argument",
                                "key_value": false,
                                "name": "<storage_provider_name>",
                                "repeatable": false,
                                "required": true
                              },
                              {
                                "alternatives": [],
                                "children": [],
                                "component_type": "Flag",
                                "key_value": false,
                                "name": "--source-path",
                                "repeatable": false,
                                "required": true
                              },
                              {
                                "alternatives": [],
                                "children": [],
                                "component_type": "Argument",
                                "key_value": false,
                                "name": "<source_path>",
                                "repeatable": false,
                                "required": true
                              }
                            ],
                            "children": [],
                            "component_type": "AlternativeGroup",
                            "key_value": false,
                            "name": "",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      },
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai checkpoint push NAME [(--file <path_on_filesystem>=<checkpoint_path> ...) | (--storage-provider <storage_provider_name> --source-path <source_path>)] [flags]",
                    "parent_header": "Usage"
                  },
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "bert-checkpoint",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Flag",
                        "key_value": false,
                        "name": "--file",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Argument",
                        "key_value": true,
                        "name": "~/checkpoints/dev/model.bin=bert/model.bin",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Flag",
                        "key_value": false,
                        "name": "--file",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Argument",
                        "key_value": true,
                        "name": "~/checkpoints/dev/config.json=bert/config.json",
                        "repeatable": false,
                        "required": true
                      }
                    ],
                    "line_contents": "flexai checkpoint push bert-checkpoint --file ~/checkpoints/dev/model.bin=bert/model.bin --file ~/checkpoints/dev/config.json=bert/config.json",
                    "parent_header": "Examples"
                  },
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "my-checkpoint",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Flag",
                        "key_value": false,
                        "name": "--file",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "~/checkpoints/model",
                        "repeatable": false,
                        "required": true
                      }
                    ],
                    "line_contents": "flexai checkpoint push my-checkpoint --file ~/checkpoints/model",
                    "parent_header": "Examples"
                  },
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "gcs-checkpoint-bert",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Flag",
                        "key_value": false,
                        "name": "--storage-provider",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "gcs-conn",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Flag",
                        "key_value": false,
                        "name": "--source-path",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "data-bucket/models/checkpoints/bert",
                        "repeatable": false,
                        "required": true
                      }
                    ],
                    "line_contents": "flexai checkpoint push gcs-checkpoint-bert --storage-provider gcs-conn --source-path data-bucket/models/checkpoints/bert",
                    "parent_header": "Examples"
                  }
                ],
                "USAGE": []
              },
              "description": "Push a checkpoint to FCS",
              "name": "push",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Push a checkpoint to FCS from either a local file system or a Remote Storage Provider. The root directory of all Checkpoint files is '/checkpoint'\n\nUsage:\n  flexai checkpoint push NAME [(--file <path_on_filesystem>=<checkpoint_path> ...) | (--storage-provider <storage_provider_name> --source-path <source_path>)] [flags]\n\nExamples:\n  - Push local files in the '~/checkpoints/dev' directory to an FCS checkpoint named 'bert-checkpoint':\n    flexai checkpoint push bert-checkpoint --file ~/checkpoints/dev/model.bin=bert/model.bin --file ~/checkpoints/dev/config.json=bert/config.json\n  - Push an entire local directory (preserving its structure) to an FCS Checkpoint named 'my-checkpoint':\n    flexai checkpoint push my-checkpoint --file ~/checkpoints/model\n  - Push a directory on a Remote Storage Provider via a Remote Storage Provider Connection named 'gcs-conn' that's in the bucket 'data-bucket' under the path 'models/checkpoints/bert' to an FCS Checkpoint named 'gcs-checkpoint-bert':\n    flexai checkpoint push gcs-checkpoint-bert --storage-provider gcs-conn --source-path data-bucket/models/checkpoints/bert\n\t\n\nFlags:\n  -f, --file stringArray          Key/Value pair representing the source and the destination file paths '<fcs_dataset_path>=<path_on_filesystem>' (<fcs_dataset_path> is optional)\n  -h, --help                      help for push\n      --source-path string        Path to the bucket/directory to use as Checkpoint source. Only required when using a Remote Storage Provider Connection, e.g. data-sets/files/wav-files\n      --storage-provider string   Name of the Remote Storage Provider Connection to use\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "checkpoint",
              "parent_header": "Available Commands"
            }
          },
          "FLAG": [
            {
              "data_type": null,
              "description": "help for checkpoint",
              "long": "--help",
              "parent_header": "Flags",
              "short": "-h"
            },
            {
              "data_type": null,
              "description": "enable verbose logging",
              "long": "--verbose",
              "parent_header": "Global Flags",
              "short": "-v"
            }
          ],
          "OTHER": [
            {
              "components": [
                {
                  "alternatives": [],
                  "children": [
                    {
                      "alternatives": [],
                      "children": [],
                      "component_type": "Keyword",
                      "key_value": false,
                      "name": "command",
                      "repeatable": false,
                      "required": true
                    }
                  ],
                  "component_type": "Group",
                  "key_value": false,
                  "name": "",
                  "repeatable": false,
                  "required": false
                }
              ],
              "line_contents": "flexai checkpoint [command]",
              "parent_header": "Usage"
            }
          ],
          "USAGE": []
        },
        "description": "Manage checkpoints",
        "name": "checkpoint",
        "outputs": {
          "help_page": {
            "status": 0,
            "stderr": "",
            "stdout": "Manage checkpoints including pushing checkpoints to the server.\n\nUsage:\n  flexai checkpoint [command]\n\nAvailable Commands:\n  delete      Deletes a checkpoint\n  export      Export a checkpoint to a storage provider\n  fetch       Fetch a checkpoint\n  inspect     Inspect a checkpoint\n  list        List checkpoints\n  push        Push a checkpoint to FCS\n\nFlags:\n  -h, --help   help for checkpoint\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging\n\nUse \"flexai checkpoint [command] --help\" for more information about a command."
          }
        },
        "parent": "flexai",
        "parent_header": "Commands"
      },
      "completion": {
        "children": {
          "COMMAND": {
            "bash": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": null,
                    "description": "help for bash",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "disable completion descriptions",
                    "long": "--no-descriptions",
                    "parent_header": "Flags",
                    "short": null
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [],
                "USAGE": []
              },
              "description": "Generate the autocompletion script for bash",
              "name": "bash",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Generate the autocompletion script for the bash shell.\n\nThis script depends on the 'bash-completion' package.\nIf it is not installed already, you can install it via your OS's package manager.\n\nTo load completions in your current shell session:\n\n\tsource <(flexai completion bash)\n\nTo load completions for every new session, execute once:\n\n#### Linux:\n\n\tflexai completion bash > /etc/bash_completion.d/flexai\n\n#### macOS:\n\n\tflexai completion bash > $(brew --prefix)/etc/bash_completion.d/flexai\n\nYou will need to start a new shell for this setup to take effect.\n\nUsage:\n  flexai completion bash\n\nFlags:\n  -h, --help              help for bash\n      --no-descriptions   disable completion descriptions\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "completion",
              "parent_header": "Available Commands"
            },
            "fish": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": null,
                    "description": "help for fish",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "disable completion descriptions",
                    "long": "--no-descriptions",
                    "parent_header": "Flags",
                    "short": null
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai completion fish [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "Generate the autocompletion script for fish",
              "name": "fish",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Generate the autocompletion script for the fish shell.\n\nTo load completions in your current shell session:\n\n\tflexai completion fish | source\n\nTo load completions for every new session, execute once:\n\n\tflexai completion fish > ~/.config/fish/completions/flexai.fish\n\nYou will need to start a new shell for this setup to take effect.\n\nUsage:\n  flexai completion fish [flags]\n\nFlags:\n  -h, --help              help for fish\n      --no-descriptions   disable completion descriptions\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "completion",
              "parent_header": "Available Commands"
            },
            "powershell": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": null,
                    "description": "help for powershell",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "disable completion descriptions",
                    "long": "--no-descriptions",
                    "parent_header": "Flags",
                    "short": null
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai completion powershell [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "Generate the autocompletion script for powershell",
              "name": "powershell",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Generate the autocompletion script for powershell.\n\nTo load completions in your current shell session:\n\n\tflexai completion powershell | Out-String | Invoke-Expression\n\nTo load completions for every new session, add the output of the above command\nto your powershell profile.\n\nUsage:\n  flexai completion powershell [flags]\n\nFlags:\n  -h, --help              help for powershell\n      --no-descriptions   disable completion descriptions\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "completion",
              "parent_header": "Available Commands"
            },
            "zsh": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": null,
                    "description": "help for zsh",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "disable completion descriptions",
                    "long": "--no-descriptions",
                    "parent_header": "Flags",
                    "short": null
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai completion zsh [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "Generate the autocompletion script for zsh",
              "name": "zsh",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Generate the autocompletion script for the zsh shell.\n\nIf shell completion is not already enabled in your environment you will need\nto enable it.  You can execute the following once:\n\n\techo \"autoload -U compinit; compinit\" >> ~/.zshrc\n\nTo load completions in your current shell session:\n\n\tsource <(flexai completion zsh)\n\nTo load completions for every new session, execute once:\n\n#### Linux:\n\n\tflexai completion zsh > \"${fpath[1]}/_flexai\"\n\n#### macOS:\n\n\tflexai completion zsh > $(brew --prefix)/share/zsh/site-functions/_flexai\n\nYou will need to start a new shell for this setup to take effect.\n\nUsage:\n  flexai completion zsh [flags]\n\nFlags:\n  -h, --help              help for zsh\n      --no-descriptions   disable completion descriptions\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "completion",
              "parent_header": "Available Commands"
            }
          },
          "FLAG": [
            {
              "data_type": null,
              "description": "help for completion",
              "long": "--help",
              "parent_header": "Flags",
              "short": "-h"
            },
            {
              "data_type": null,
              "description": "enable verbose logging",
              "long": "--verbose",
              "parent_header": "Global Flags",
              "short": "-v"
            }
          ],
          "OTHER": [
            {
              "components": [
                {
                  "alternatives": [],
                  "children": [
                    {
                      "alternatives": [],
                      "children": [],
                      "component_type": "Keyword",
                      "key_value": false,
                      "name": "command",
                      "repeatable": false,
                      "required": true
                    }
                  ],
                  "component_type": "Group",
                  "key_value": false,
                  "name": "",
                  "repeatable": false,
                  "required": false
                }
              ],
              "line_contents": "flexai completion [command]",
              "parent_header": "Usage"
            }
          ],
          "USAGE": []
        },
        "description": "Generate the autocompletion script for the specified shell",
        "name": "completion",
        "outputs": {
          "help_page": {
            "status": 0,
            "stderr": "",
            "stdout": "Generate the autocompletion script for flexai for the specified shell.\nSee each sub-command's help for details on how to use the generated script.\n\nUsage:\n  flexai completion [command]\n\nAvailable Commands:\n  bash        Generate the autocompletion script for bash\n  fish        Generate the autocompletion script for fish\n  powershell  Generate the autocompletion script for powershell\n  zsh         Generate the autocompletion script for zsh\n\nFlags:\n  -h, --help   help for completion\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging\n\nUse \"flexai completion [command] --help\" for more information about a command."
          }
        },
        "parent": "flexai",
        "parent_header": "Additional Commands"
      },
      "dataset": {
        "children": {
          "COMMAND": {
            "delete": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": null,
                    "description": "help for delete",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "NAME",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai dataset delete NAME [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "Deletes a dataset",
              "name": "delete",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Deletes a dataset\n\nUsage:\n  flexai dataset delete NAME [flags]\n\nFlags:\n  -h, --help   help for delete\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "dataset",
              "parent_header": "Available Commands"
            },
            "inspect": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": null,
                    "description": "help for inspect",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "Output in JSON format (default YAML)",
                    "long": "--json",
                    "parent_header": "Flags",
                    "short": "-j"
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "NAME",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai dataset inspect NAME [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "inspect a Dataset",
              "name": "inspect",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Get more details about a Datasets.\n\nUsage:\n  flexai dataset inspect NAME [flags]\n\nFlags:\n  -h, --help   help for inspect\n  -j, --json   Output in JSON format (default YAML)\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "dataset",
              "parent_header": "Available Commands"
            },
            "list": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": null,
                    "description": "help for list",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai dataset list [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "List datasets",
              "name": "list",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "List all datasets and their metadata.\n\nUsage:\n  flexai dataset list [flags]\n\nFlags:\n  -h, --help   help for list\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "dataset",
              "parent_header": "Available Commands"
            },
            "push": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": "stringArray",
                    "description": "Key/Value pair representing the source and the destination file paths '<path_on_filesystem>=<fcs_dataset_path>' (<fcs_dataset_path> is optional)",
                    "long": "--file",
                    "parent_header": "Flags",
                    "short": "-f"
                  },
                  {
                    "data_type": null,
                    "description": "help for push",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": "string",
                    "description": "Path to the bucket/directory to use as Dataset source. Only required when using a Remote Storage Provider Connection, e.g. data-sets/files/wav-files",
                    "long": "--source-path",
                    "parent_header": "Flags",
                    "short": null
                  },
                  {
                    "data_type": "string",
                    "description": "Name of the Remote Storage Provider Connection to use",
                    "long": "--storage-provider",
                    "parent_header": "Flags",
                    "short": null
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "NAME",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [
                              {
                                "alternatives": [],
                                "children": [],
                                "component_type": "Flag",
                                "key_value": false,
                                "name": "--file",
                                "repeatable": false,
                                "required": true
                              },
                              {
                                "alternatives": [],
                                "children": [],
                                "component_type": "Argument",
                                "key_value": true,
                                "name": "<path_on_filesystem>=<fcs_dataset_path>",
                                "repeatable": false,
                                "required": true
                              },
                              {
                                "alternatives": [],
                                "children": [],
                                "component_type": "Keyword",
                                "key_value": false,
                                "name": "",
                                "repeatable": true,
                                "required": true
                              }
                            ],
                            "children": [],
                            "component_type": "AlternativeGroup",
                            "key_value": false,
                            "name": "",
                            "repeatable": true,
                            "required": true
                          },
                          {
                            "alternatives": [
                              {
                                "alternatives": [],
                                "children": [],
                                "component_type": "Flag",
                                "key_value": false,
                                "name": "--storage-provider",
                                "repeatable": false,
                                "required": true
                              },
                              {
                                "alternatives": [],
                                "children": [],
                                "component_type": "Argument",
                                "key_value": false,
                                "name": "<storage_provider_name>",
                                "repeatable": false,
                                "required": true
                              },
                              {
                                "alternatives": [],
                                "children": [],
                                "component_type": "Flag",
                                "key_value": false,
                                "name": "--source-path",
                                "repeatable": false,
                                "required": true
                              },
                              {
                                "alternatives": [],
                                "children": [],
                                "component_type": "Argument",
                                "key_value": false,
                                "name": "<source_path>",
                                "repeatable": false,
                                "required": true
                              }
                            ],
                            "children": [],
                            "component_type": "AlternativeGroup",
                            "key_value": false,
                            "name": "",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      },
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai dataset push NAME [(--file <path_on_filesystem>=<fcs_dataset_path> ...) | (--storage-provider <storage_provider_name> --source-path <source_path>)] [flags]",
                    "parent_header": "Usage"
                  },
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "wiki-dataset",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Flag",
                        "key_value": false,
                        "name": "--file",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Argument",
                        "key_value": true,
                        "name": "~/datasets/dev/train.bin=wikiset/train.bin",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Flag",
                        "key_value": false,
                        "name": "--file",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Argument",
                        "key_value": true,
                        "name": "~/datasets/dev/test/val.bin=wikiset/val.bin",
                        "repeatable": false,
                        "required": true
                      }
                    ],
                    "line_contents": "flexai dataset push wiki-dataset --file ~/datasets/dev/train.bin=wikiset/train.bin --file ~/datasets/dev/test/val.bin=wikiset/val.bin",
                    "parent_header": "Examples"
                  },
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "my-dataset",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Flag",
                        "key_value": false,
                        "name": "--file",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "~/datasets/directory",
                        "repeatable": false,
                        "required": true
                      }
                    ],
                    "line_contents": "flexai dataset push my-dataset --file ~/datasets/directory",
                    "parent_header": "Examples"
                  },
                  {
                    "components": null,
                    "line_contents": "  - Push a directory on a Remote Storage Provider via a Remote Storage Provider Connection named 'gcs-conn' that's in the bucket 'data-bucket'  under the path 'data-sets/files/wav-files' to an FCS Dataset named 'gcs-dataset-audio':",
                    "parent_header": "Examples"
                  },
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "gcs-dataset-audio",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Flag",
                        "key_value": false,
                        "name": "--storage-provider",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "gcs-conn",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Flag",
                        "key_value": false,
                        "name": "--source-path",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "data-bucket/data-sets/files/wav-files",
                        "repeatable": false,
                        "required": true
                      }
                    ],
                    "line_contents": "flexai dataset push gcs-dataset-audio --storage-provider gcs-conn --source-path data-bucket/data-sets/files/wav-files",
                    "parent_header": "Examples"
                  }
                ],
                "USAGE": []
              },
              "description": "Push a dataset to FCS",
              "name": "push",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Push a dataset to FCS from either a local file system or a Remote Storage Provider. The root directory of all Dataset files during a Training Job is '/input'\n\nUsage:\n  flexai dataset push NAME [(--file <path_on_filesystem>=<fcs_dataset_path> ...) | (--storage-provider <storage_provider_name> --source-path <source_path>)] [flags]\n\nExamples:\n  - Push local files in the '~/datasets/dev' directory to an FCS dataset named 'wiki-dataset':\n    flexai dataset push wiki-dataset --file ~/datasets/dev/train.bin=wikiset/train.bin --file ~/datasets/dev/test/val.bin=wikiset/val.bin\n  - Push an entire local directory (preserving its structure) to an FCS Dataset named 'my-dataset':\n    flexai dataset push my-dataset --file ~/datasets/directory\n  - Push a directory on a Remote Storage Provider via a Remote Storage Provider Connection named 'gcs-conn' that's in the bucket 'data-bucket'  under the path 'data-sets/files/wav-files' to an FCS Dataset named 'gcs-dataset-audio':\n    flexai dataset push gcs-dataset-audio --storage-provider gcs-conn --source-path data-bucket/data-sets/files/wav-files\n\t\n\nFlags:\n  -f, --file stringArray          Key/Value pair representing the source and the destination file paths '<path_on_filesystem>=<fcs_dataset_path>' (<fcs_dataset_path> is optional)\n  -h, --help                      help for push\n      --source-path string        Path to the bucket/directory to use as Dataset source. Only required when using a Remote Storage Provider Connection, e.g. data-sets/files/wav-files\n      --storage-provider string   Name of the Remote Storage Provider Connection to use\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "dataset",
              "parent_header": "Available Commands"
            }
          },
          "FLAG": [
            {
              "data_type": null,
              "description": "help for dataset",
              "long": "--help",
              "parent_header": "Flags",
              "short": "-h"
            },
            {
              "data_type": null,
              "description": "enable verbose logging",
              "long": "--verbose",
              "parent_header": "Global Flags",
              "short": "-v"
            }
          ],
          "OTHER": [
            {
              "components": [
                {
                  "alternatives": [],
                  "children": [
                    {
                      "alternatives": [],
                      "children": [],
                      "component_type": "Keyword",
                      "key_value": false,
                      "name": "command",
                      "repeatable": false,
                      "required": true
                    }
                  ],
                  "component_type": "Group",
                  "key_value": false,
                  "name": "",
                  "repeatable": false,
                  "required": false
                }
              ],
              "line_contents": "flexai dataset [command]",
              "parent_header": "Usage"
            }
          ],
          "USAGE": []
        },
        "description": "Manage datasets",
        "name": "dataset",
        "outputs": {
          "help_page": {
            "status": 0,
            "stderr": "",
            "stdout": "Manage datasets including pushing datasets to the server.\n\nUsage:\n  flexai dataset [command]\n\nAvailable Commands:\n  delete      Deletes a dataset\n  inspect     inspect a Dataset\n  list        List datasets\n  push        Push a dataset to FCS\n\nFlags:\n  -h, --help   help for dataset\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging\n\nUse \"flexai dataset [command] --help\" for more information about a command."
          }
        },
        "parent": "flexai",
        "parent_header": "Commands"
      },
      "doctor": {
        "children": {
          "COMMAND": {},
          "FLAG": [
            {
              "data_type": null,
              "description": "help for doctor",
              "long": "--help",
              "parent_header": "Flags",
              "short": "-h"
            },
            {
              "data_type": null,
              "description": "enable verbose logging",
              "long": "--verbose",
              "parent_header": "Global Flags",
              "short": "-v"
            }
          ],
          "OTHER": [
            {
              "components": [
                {
                  "alternatives": [],
                  "children": [
                    {
                      "alternatives": [],
                      "children": [],
                      "component_type": "Keyword",
                      "key_value": false,
                      "name": "flags",
                      "repeatable": false,
                      "required": true
                    }
                  ],
                  "component_type": "Group",
                  "key_value": false,
                  "name": "",
                  "repeatable": false,
                  "required": false
                }
              ],
              "line_contents": "flexai doctor [flags]",
              "parent_header": "Usage"
            }
          ],
          "USAGE": []
        },
        "description": "Check your system for potential problems.",
        "name": "doctor",
        "outputs": {
          "help_page": {
            "status": 0,
            "stderr": "",
            "stdout": "Run test suites to check if your system is ready to run the CLI.\n\nUsage:\n  flexai doctor [flags]\n\nFlags:\n  -h, --help   help for doctor\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
          }
        },
        "parent": "flexai",
        "parent_header": "General"
      },
      "help": {
        "children": {
          "COMMAND": {},
          "FLAG": [
            {
              "data_type": null,
              "description": "help for help",
              "long": "--help",
              "parent_header": "Flags",
              "short": "-h"
            },
            {
              "data_type": null,
              "description": "enable verbose logging",
              "long": "--verbose",
              "parent_header": "Global Flags",
              "short": "-v"
            }
          ],
          "OTHER": [
            {
              "components": [
                {
                  "alternatives": [],
                  "children": [
                    {
                      "alternatives": [],
                      "children": [],
                      "component_type": "Keyword",
                      "key_value": false,
                      "name": "command",
                      "repeatable": false,
                      "required": true
                    }
                  ],
                  "component_type": "Group",
                  "key_value": false,
                  "name": "",
                  "repeatable": false,
                  "required": false
                },
                {
                  "alternatives": [],
                  "children": [
                    {
                      "alternatives": [],
                      "children": [],
                      "component_type": "Keyword",
                      "key_value": false,
                      "name": "flags",
                      "repeatable": false,
                      "required": true
                    }
                  ],
                  "component_type": "Group",
                  "key_value": false,
                  "name": "",
                  "repeatable": false,
                  "required": false
                }
              ],
              "line_contents": "flexai help [command] [flags]",
              "parent_header": "Usage"
            }
          ],
          "USAGE": []
        },
        "description": "Help about any command",
        "name": "help",
        "outputs": {
          "help_page": {
            "status": 0,
            "stderr": "",
            "stdout": "Help provides help for any command in the application.\nSimply type flexai help [path to command] for full details.\n\nUsage:\n  flexai help [command] [flags]\n\nFlags:\n  -h, --help   help for help\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
          }
        },
        "parent": "flexai",
        "parent_header": "Additional Commands"
      },
      "secret": {
        "children": {
          "COMMAND": {
            "create": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": null,
                    "description": "help for create",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "Take the secret value from stdin",
                    "long": "--value-stdin",
                    "parent_header": "Flags",
                    "short": "-p"
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "NAME",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai secret create NAME [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "Create a new secret",
              "name": "create",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Create a new secret with a specified name\n\nUsage:\n  flexai secret create NAME [flags]\n\nFlags:\n  -h, --help          help for create\n  -p, --value-stdin   Take the secret value from stdin\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "secret",
              "parent_header": "Available Commands"
            },
            "delete": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": null,
                    "description": "help for delete",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "NAME",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai secret delete NAME [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "Delete an existing secret",
              "name": "delete",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Delete an existing secret with a specified name\n\nUsage:\n  flexai secret delete NAME [flags]\n\nFlags:\n  -h, --help   help for delete\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "secret",
              "parent_header": "Available Commands"
            },
            "list": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": null,
                    "description": "help for list",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai secret list [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "List secrets",
              "name": "list",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "List all secrets and their metadata.\n\nUsage:\n  flexai secret list [flags]\n\nFlags:\n  -h, --help   help for list\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "secret",
              "parent_header": "Available Commands"
            },
            "update": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": null,
                    "description": "help for update",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "Take the secret value from stdin",
                    "long": "--value-stdin",
                    "parent_header": "Flags",
                    "short": "-p"
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "NAME",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai secret update NAME [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "Update an existing secret",
              "name": "update",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Update an existing secret with a specified name\n\nUsage:\n  flexai secret update NAME [flags]\n\nFlags:\n  -h, --help          help for update\n  -p, --value-stdin   Take the secret value from stdin\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "secret",
              "parent_header": "Available Commands"
            }
          },
          "FLAG": [
            {
              "data_type": null,
              "description": "help for secret",
              "long": "--help",
              "parent_header": "Flags",
              "short": "-h"
            },
            {
              "data_type": null,
              "description": "enable verbose logging",
              "long": "--verbose",
              "parent_header": "Global Flags",
              "short": "-v"
            }
          ],
          "OTHER": [
            {
              "components": [
                {
                  "alternatives": [],
                  "children": [
                    {
                      "alternatives": [],
                      "children": [],
                      "component_type": "Keyword",
                      "key_value": false,
                      "name": "command",
                      "repeatable": false,
                      "required": true
                    }
                  ],
                  "component_type": "Group",
                  "key_value": false,
                  "name": "",
                  "repeatable": false,
                  "required": false
                }
              ],
              "line_contents": "flexai secret [command]",
              "parent_header": "Usage"
            }
          ],
          "USAGE": []
        },
        "description": "Manage secrets",
        "name": "secret",
        "outputs": {
          "help_page": {
            "status": 0,
            "stderr": "",
            "stdout": "Manage secrets for the application\n\nUsage:\n  flexai secret [command]\n\nAvailable Commands:\n  create      Create a new secret\n  delete      Delete an existing secret\n  list        List secrets\n  update      Update an existing secret\n\nFlags:\n  -h, --help   help for secret\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging\n\nUse \"flexai secret [command] --help\" for more information about a command."
          }
        },
        "parent": "flexai",
        "parent_header": "Commands"
      },
      "source": {
        "children": {
          "COMMAND": {
            "add": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": null,
                    "description": "help for add",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "NAME",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "GithubUrl",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai source add NAME GithubUrl [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "Add a new model source",
              "name": "add",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Add new model source from a private GitHub repository or using PAT token\n\nUsage:\n  flexai source add NAME GithubUrl [flags]\n\nFlags:\n  -h, --help   help for add\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "source",
              "parent_header": "Available Commands"
            },
            "auth": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": null,
                    "description": "help for auth",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "GithubUrl",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai source auth GithubUrl [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "Install, if necessary, FlexAI GitHub app",
              "name": "auth",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Checks if FlexAI GitHub app is installed for the repository and  if necessary generates a new installation link. Copy the link to your browser and follow the instructions.\n\nUsage:\n  flexai source auth GithubUrl [flags]\n\nFlags:\n  -h, --help   help for auth\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "source",
              "parent_header": "Available Commands"
            },
            "delete": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": null,
                    "description": "help for delete",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "NAME",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai source delete NAME [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "Deletes a model source",
              "name": "delete",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Deletes model source\n\nUsage:\n  flexai source delete NAME [flags]\n\nFlags:\n  -h, --help   help for delete\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "source",
              "parent_header": "Available Commands"
            },
            "inspect": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": null,
                    "description": "help for inspect",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "Output in JSON format (default YAML)",
                    "long": "--json",
                    "parent_header": "Flags",
                    "short": "-j"
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai source inspect [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "inspect source",
              "name": "inspect",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Inspect a source\n\nUsage:\n  flexai source inspect [flags]\n\nFlags:\n  -h, --help   help for inspect\n  -j, --json   Output in JSON format (default YAML)\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "source",
              "parent_header": "Available Commands"
            },
            "list": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": null,
                    "description": "help for list",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai source list [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "list sources",
              "name": "list",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "List all sources that have been added.\n\nUsage:\n  flexai source list [flags]\n\nFlags:\n  -h, --help   help for list\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "source",
              "parent_header": "Available Commands"
            }
          },
          "FLAG": [
            {
              "data_type": null,
              "description": "help for source",
              "long": "--help",
              "parent_header": "Flags",
              "short": "-h"
            },
            {
              "data_type": null,
              "description": "enable verbose logging",
              "long": "--verbose",
              "parent_header": "Global Flags",
              "short": "-v"
            }
          ],
          "OTHER": [
            {
              "components": [
                {
                  "alternatives": [],
                  "children": [
                    {
                      "alternatives": [],
                      "children": [],
                      "component_type": "Keyword",
                      "key_value": false,
                      "name": "command",
                      "repeatable": false,
                      "required": true
                    }
                  ],
                  "component_type": "Group",
                  "key_value": false,
                  "name": "",
                  "repeatable": false,
                  "required": false
                }
              ],
              "line_contents": "flexai source [command]",
              "parent_header": "Usage"
            }
          ],
          "USAGE": []
        },
        "description": "Manage model sources",
        "name": "source",
        "outputs": {
          "help_page": {
            "status": 0,
            "stderr": "",
            "stdout": "Manage model sources from private GitHub repositories\n\nUsage:\n  flexai source [command]\n\nAvailable Commands:\n  add         Add a new model source\n  auth        Install, if necessary, FlexAI GitHub app\n  delete      Deletes a model source\n  inspect     inspect source\n  list        list sources\n\nFlags:\n  -h, --help   help for source\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging\n\nUse \"flexai source [command] --help\" for more information about a command."
          }
        },
        "parent": "flexai",
        "parent_header": "Commands"
      },
      "storage": {
        "children": {
          "COMMAND": {
            "create": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": "string",
                    "description": "S3-compatible storage 'Access Key ID'",
                    "long": "--access-key-id",
                    "parent_header": "Flags",
                    "short": null
                  },
                  {
                    "data_type": "string",
                    "description": "S3-compatible storage endpoint, e.g. \"s3.eu-west-1.amazonaws.com\", \"s3.us-east-2.amazonaws.com\"",
                    "long": "--endpoint",
                    "parent_header": "Flags",
                    "short": null
                  },
                  {
                    "data_type": null,
                    "description": "help for create",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": "ProviderName",
                    "description": "Storage Provider Name (r2|minio|gcs|s3)",
                    "long": "--provider",
                    "parent_header": "Flags",
                    "short": "-p"
                  },
                  {
                    "data_type": "string",
                    "description": "S3-compatible storage Region, e.g. \"eu-west-1\", \"us-east-2\"",
                    "long": "--region",
                    "parent_header": "Flags",
                    "short": null
                  },
                  {
                    "data_type": "string",
                    "description": "Name of the 'FCS Secret' containing the S3-compatible storage 'Secret Access Key'",
                    "long": "--secret-access-key-name",
                    "parent_header": "Flags",
                    "short": null
                  },
                  {
                    "data_type": "string",
                    "description": "Name of the 'FCS Secret' containing the GCP 'Service Account' JSON file",
                    "long": "--service-account-file-name",
                    "parent_header": "Flags",
                    "short": null
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "NAME",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai storage create NAME [flags]",
                    "parent_header": "Usage"
                  },
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "aws-storage-conn-eu",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Flag",
                        "key_value": false,
                        "name": "--provider",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "s3",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Flag",
                        "key_value": false,
                        "name": "--endpoint",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "s3.eu-west-1.amazonaws.com",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Flag",
                        "key_value": false,
                        "name": "--region",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "eu-west-1",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Flag",
                        "key_value": false,
                        "name": "--access-key-id",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "AKIAEXAMPLE",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Flag",
                        "key_value": false,
                        "name": "--secret-access-key-name",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "aws-secret-accss-ky-eu",
                        "repeatable": false,
                        "required": true
                      }
                    ],
                    "line_contents": "flexai storage create aws-storage-conn-eu --provider s3 --endpoint s3.eu-west-1.amazonaws.com --region eu-west-1 --access-key-id AKIAEXAMPLE --secret-access-key-name aws-secret-accss-ky-eu",
                    "parent_header": "Examples"
                  },
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "gcs-conn",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Flag",
                        "key_value": false,
                        "name": "--provider",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "gcs",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Flag",
                        "key_value": false,
                        "name": "--service-account-file-name",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "gcp-sa",
                        "repeatable": false,
                        "required": true
                      }
                    ],
                    "line_contents": "flexai storage create gcs-conn --provider gcs --service-account-file-name gcp-sa",
                    "parent_header": "Examples"
                  },
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "NAME",
                        "repeatable": false,
                        "required": true
                      }
                    ],
                    "line_contents": "Create it by running: flexai secret create NAME",
                    "parent_header": "Flags"
                  },
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "NAME",
                        "repeatable": false,
                        "required": true
                      }
                    ],
                    "line_contents": "Create it by running: flexai secret create NAME",
                    "parent_header": "Flags"
                  }
                ],
                "USAGE": []
              },
              "description": "Create Storage Provider Connection",
              "name": "create",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Create a new Storage Provider Connection using vendor-specific connection details\n\nUsage:\n  flexai storage create NAME [flags]\n\nExamples:\n  - A connection to an AWS S3 storage resource in the 'eu-west-1' region using AWS's provided Access Key ID (AKIAEXAMPLE) & Secret Access Key (stored in an FCS Secret named 'aws-secret-accss-ky-eu'):\n    flexai storage create aws-storage-conn-eu --provider s3 --endpoint s3.eu-west-1.amazonaws.com --region eu-west-1 --access-key-id AKIAEXAMPLE --secret-access-key-name aws-secret-accss-ky-eu\n\n  - A connection to a Google Cloud Storage resource using a Service Account JSON file stored in an FCS Secret named 'gcp-sa':\n    flexai storage create gcs-conn --provider gcs --service-account-file-name gcp-sa\n\t\t\n\nFlags:\n      --access-key-id string               S3-compatible storage 'Access Key ID'\n      --endpoint string                    S3-compatible storage endpoint, e.g. \"s3.eu-west-1.amazonaws.com\", \"s3.us-east-2.amazonaws.com\"\n  -h, --help                               help for create\n  -p, --provider ProviderName              Storage Provider Name (r2|minio|gcs|s3)\n      --region string                      S3-compatible storage Region, e.g. \"eu-west-1\", \"us-east-2\"\n      --secret-access-key-name string      Name of the 'FCS Secret' containing the S3-compatible storage 'Secret Access Key'\n                                             Create it by running: flexai secret create NAME\n      --service-account-file-name string   Name of the 'FCS Secret' containing the GCP 'Service Account' JSON file\n                                             Create it by running: flexai secret create NAME\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "storage",
              "parent_header": "Available Commands"
            },
            "inspect": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": null,
                    "description": "help for inspect",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "Output in JSON format (default YAML)",
                    "long": "--json",
                    "parent_header": "Flags",
                    "short": "-j"
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "NAME",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai storage inspect NAME [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "Inspect a Storage Provider",
              "name": "inspect",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Get more details about a Storage Provider.\n\nUsage:\n  flexai storage inspect NAME [flags]\n\nFlags:\n  -h, --help   help for inspect\n  -j, --json   Output in JSON format (default YAML)\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "storage",
              "parent_header": "Available Commands"
            },
            "list": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": null,
                    "description": "help for list",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai storage list [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "List storage provider connections",
              "name": "list",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "List all the available storage provider connections\n\nUsage:\n  flexai storage list [flags]\n\nFlags:\n  -h, --help   help for list\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "storage",
              "parent_header": "Available Commands"
            }
          },
          "FLAG": [
            {
              "data_type": null,
              "description": "help for storage",
              "long": "--help",
              "parent_header": "Flags",
              "short": "-h"
            },
            {
              "data_type": null,
              "description": "enable verbose logging",
              "long": "--verbose",
              "parent_header": "Global Flags",
              "short": "-v"
            }
          ],
          "OTHER": [
            {
              "components": [
                {
                  "alternatives": [],
                  "children": [
                    {
                      "alternatives": [],
                      "children": [],
                      "component_type": "Keyword",
                      "key_value": false,
                      "name": "command",
                      "repeatable": false,
                      "required": true
                    }
                  ],
                  "component_type": "Group",
                  "key_value": false,
                  "name": "",
                  "repeatable": false,
                  "required": false
                }
              ],
              "line_contents": "flexai storage [command]",
              "parent_header": "Usage"
            }
          ],
          "USAGE": []
        },
        "description": "Manage storage providers",
        "name": "storage",
        "outputs": {
          "help_page": {
            "status": 0,
            "stderr": "",
            "stdout": "Manage storage provider connections\n\nUsage:\n  flexai storage [command]\n\nAvailable Commands:\n  create      Create Storage Provider Connection\n  inspect     Inspect a Storage Provider\n  list        List storage provider connections\n\nFlags:\n  -h, --help   help for storage\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging\n\nUse \"flexai storage [command] --help\" for more information about a command."
          }
        },
        "parent": "flexai",
        "parent_header": "Commands"
      },
      "training": {
        "children": {
          "COMMAND": {
            "debug-ssh": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": "uint",
                    "description": "Number of accelerators per server (default 1)",
                    "long": "--accels",
                    "parent_header": "Flags",
                    "short": "-a"
                  },
                  {
                    "data_type": "stringToString",
                    "description": "Affinity rules for the training job (default [])",
                    "long": "--affinity",
                    "parent_header": "Flags",
                    "short": null
                  },
                  {
                    "data_type": "stringArray",
                    "description": "SSH public keys you will use to connect into the training environment (default gathered from ssh-agent)",
                    "long": "--authorized-keys",
                    "parent_header": "Flags",
                    "short": null
                  },
                  {
                    "data_type": "string",
                    "description": "Name of the checkpoint to use",
                    "long": "--checkpoint",
                    "parent_header": "Flags",
                    "short": "-C"
                  },
                  {
                    "data_type": "string",
                    "description": "Name of the dataset to use",
                    "long": "--dataset",
                    "parent_header": "Flags",
                    "short": "-D"
                  },
                  {
                    "data_type": "Arch",
                    "description": "Desired architecture (nvidia), default is nvidia (default nvidia)",
                    "long": "--device-arch",
                    "parent_header": "Flags",
                    "short": "-d"
                  },
                  {
                    "data_type": "string",
                    "description": "Github URL of a dotfiles repository that will be installed in the interactive training environment",
                    "long": "--dotfiles",
                    "parent_header": "Flags",
                    "short": null
                  },
                  {
                    "data_type": "stringArray",
                    "description": "Environment variables in the format key=value",
                    "long": "--env",
                    "parent_header": "Flags",
                    "short": "-E"
                  },
                  {
                    "data_type": "string",
                    "description": "The Git commit author email in the interactive training environment (default \"diegocoyt@gmail.com\")",
                    "long": "--git-author-email",
                    "parent_header": "Flags",
                    "short": null
                  },
                  {
                    "data_type": "string",
                    "description": "The Git commit author name in the interactive training environment (default \"Diego Coy\")",
                    "long": "--git-author-name",
                    "parent_header": "Flags",
                    "short": null
                  },
                  {
                    "data_type": null,
                    "description": "help for debug-ssh",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "Do not queue the training job if resources are not available",
                    "long": "--no-queuing",
                    "parent_header": "Flags",
                    "short": null
                  },
                  {
                    "data_type": "uint",
                    "description": "Number of servers to train on (default 1)",
                    "long": "--nodes",
                    "parent_header": "Flags",
                    "short": "-n"
                  },
                  {
                    "data_type": "stringArray",
                    "description": "Secrets in the format key=fcs secret name",
                    "long": "--secret",
                    "parent_header": "Flags",
                    "short": "-S"
                  },
                  {
                    "data_type": "uint32",
                    "description": "Timeout in seconds after which the interactive training session will be stopped during no activity (default 600) (default 600)",
                    "long": "--session-timeout",
                    "parent_header": "Flags",
                    "short": null
                  },
                  {
                    "data_type": "string",
                    "description": "Name of source to use",
                    "long": "--source-name",
                    "parent_header": "Flags",
                    "short": "-s"
                  },
                  {
                    "data_type": "string",
                    "description": "Revision of the Git repository branch name or commit hash (default \"main\")",
                    "long": "--source-revision",
                    "parent_header": "Flags",
                    "short": "-r"
                  },
                  {
                    "data_type": null,
                    "description": "Open VSCode automatically",
                    "long": "--vscode",
                    "parent_header": "Flags",
                    "short": null
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai training debug-ssh [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "Start an interactive training",
              "name": "debug-ssh",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Build, train, modify interactively your model on cloud infrastructure.from either private or public Git repositories.\n\nUsage:\n  flexai training debug-ssh [flags]\n\nFlags:\n  -a, --accels uint                   Number of accelerators per server (default 1)\n      --affinity stringToString       Affinity rules for the training job (default [])\n      --authorized-keys stringArray   SSH public keys you will use to connect into the training environment (default gathered from ssh-agent)\n  -C, --checkpoint string             Name of the checkpoint to use\n  -D, --dataset string                Name of the dataset to use\n  -d, --device-arch Arch              Desired architecture (nvidia), default is nvidia (default nvidia)\n      --dotfiles string               Github URL of a dotfiles repository that will be installed in the interactive training environment\n  -E, --env stringArray               Environment variables in the format key=value\n      --git-author-email string       The Git commit author email in the interactive training environment (default \"diegocoyt@gmail.com\")\n      --git-author-name string        The Git commit author name in the interactive training environment (default \"Diego Coy\")\n  -h, --help                          help for debug-ssh\n      --no-queuing                    Do not queue the training job if resources are not available\n  -n, --nodes uint                    Number of servers to train on (default 1)\n  -S, --secret stringArray            Secrets in the format key=fcs secret name\n      --session-timeout uint32        Timeout in seconds after which the interactive training session will be stopped during no activity (default 600) (default 600)\n  -s, --source-name string            Name of source to use\n  -r, --source-revision string        Revision of the Git repository branch name or commit hash (default \"main\")\n      --vscode                        Open VSCode automatically\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "training",
              "parent_header": "Available Commands"
            },
            "delete": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": null,
                    "description": "help for delete",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "NAME",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai training delete NAME [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "Deletes a training",
              "name": "delete",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Deletes a training\n\nUsage:\n  flexai training delete NAME [flags]\n\nFlags:\n  -h, --help   help for delete\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "training",
              "parent_header": "Available Commands"
            },
            "fetch": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": "string",
                    "description": "Destination directory to save the training result (default \".\")",
                    "long": "--destination",
                    "parent_header": "Flags",
                    "short": "-d"
                  },
                  {
                    "data_type": null,
                    "description": "help for fetch",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "NAME",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai training fetch NAME [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "Fetch a training result",
              "name": "fetch",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Fetch a training result by specifying the training name.\n\nUsage:\n  flexai training fetch NAME [flags]\n\nFlags:\n  -d, --destination string   Destination directory to save the training result (default \".\")\n  -h, --help                 help for fetch\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "training",
              "parent_header": "Available Commands"
            },
            "inspect": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": null,
                    "description": "help for inspect",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "Output in JSON format (default YAML)",
                    "long": "--json",
                    "parent_header": "Flags",
                    "short": "-j"
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "NAME",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai training inspect NAME [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "inspect a training",
              "name": "inspect",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Get more details about a training.\n\nUsage:\n  flexai training inspect NAME [flags]\n\nFlags:\n  -h, --help   help for inspect\n  -j, --json   Output in JSON format (default YAML)\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "training",
              "parent_header": "Available Commands"
            },
            "list": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": null,
                    "description": "help for list",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai training list [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "List trainings",
              "name": "list",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "List all trainings that have been run.\n\nUsage:\n  flexai training list [flags]\n\nFlags:\n  -h, --help   help for list\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "training",
              "parent_header": "Available Commands"
            },
            "logs": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": null,
                    "description": "help for logs",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "NAME",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai training logs NAME [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "Display logs for a given training",
              "name": "logs",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Streams logs from a training\n\nUsage:\n  flexai training logs NAME [flags]\n\nFlags:\n  -h, --help   help for logs\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "training",
              "parent_header": "Available Commands"
            },
            "run": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": "uint",
                    "description": "Number of accelerators per server (default 1)",
                    "long": "--accels",
                    "parent_header": "Flags",
                    "short": "-a"
                  },
                  {
                    "data_type": "stringToString",
                    "description": "Affinity rules for the training job (default [])",
                    "long": "--affinity",
                    "parent_header": "Flags",
                    "short": null
                  },
                  {
                    "data_type": "string",
                    "description": "Name of the checkpoint to use",
                    "long": "--checkpoint",
                    "parent_header": "Flags",
                    "short": "-C"
                  },
                  {
                    "data_type": "string",
                    "description": "Name of the dataset to use",
                    "long": "--dataset",
                    "parent_header": "Flags",
                    "short": "-D"
                  },
                  {
                    "data_type": "Arch",
                    "description": "Desired architecture (nvidia), default is nvidia (default nvidia)",
                    "long": "--device-arch",
                    "parent_header": "Flags",
                    "short": "-d"
                  },
                  {
                    "data_type": "stringArray",
                    "description": "Environment variables in the format key=value",
                    "long": "--env",
                    "parent_header": "Flags",
                    "short": "-E"
                  },
                  {
                    "data_type": null,
                    "description": "help for run",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "Do not queue the training job if resources are not available",
                    "long": "--no-queuing",
                    "parent_header": "Flags",
                    "short": null
                  },
                  {
                    "data_type": "uint",
                    "description": "Number of servers to train on (default 1)",
                    "long": "--nodes",
                    "parent_header": "Flags",
                    "short": "-n"
                  },
                  {
                    "data_type": "stringArray",
                    "description": "Secrets in the format key=fcs secret name",
                    "long": "--secret",
                    "parent_header": "Flags",
                    "short": "-S"
                  },
                  {
                    "data_type": "string",
                    "description": "Name of source to use",
                    "long": "--source-name",
                    "parent_header": "Flags",
                    "short": "-s"
                  },
                  {
                    "data_type": "string",
                    "description": "Revision of the git repository branch name or commit hash (default \"main\")",
                    "long": "--source-revision",
                    "parent_header": "Flags",
                    "short": "-r"
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "NAME",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Flag",
                        "key_value": false,
                        "name": "--",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "entrypoint",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "args",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai training run NAME [flags] -- entrypoint [args]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "Train your model on cloud infrastructure",
              "name": "run",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Build and train your model on cloud infrastructure.from either private or public git repositories.\n\nUsage:\n  flexai training run NAME [flags] -- entrypoint [args]\n\nFlags:\n  -a, --accels uint               Number of accelerators per server (default 1)\n      --affinity stringToString   Affinity rules for the training job (default [])\n  -C, --checkpoint string         Name of the checkpoint to use\n  -D, --dataset string            Name of the dataset to use\n  -d, --device-arch Arch          Desired architecture (nvidia), default is nvidia (default nvidia)\n  -E, --env stringArray           Environment variables in the format key=value\n  -h, --help                      help for run\n      --no-queuing                Do not queue the training job if resources are not available\n  -n, --nodes uint                Number of servers to train on (default 1)\n  -S, --secret stringArray        Secrets in the format key=fcs secret name\n  -s, --source-name string        Name of source to use\n  -r, --source-revision string    Revision of the git repository branch name or commit hash (default \"main\")\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "training",
              "parent_header": "Available Commands"
            },
            "stop": {
              "children": {
                "COMMAND": {},
                "FLAG": [
                  {
                    "data_type": null,
                    "description": "help for stop",
                    "long": "--help",
                    "parent_header": "Flags",
                    "short": "-h"
                  },
                  {
                    "data_type": null,
                    "description": "enable verbose logging",
                    "long": "--verbose",
                    "parent_header": "Global Flags",
                    "short": "-v"
                  }
                ],
                "OTHER": [
                  {
                    "components": [
                      {
                        "alternatives": [],
                        "children": [],
                        "component_type": "Keyword",
                        "key_value": false,
                        "name": "NAME",
                        "repeatable": false,
                        "required": true
                      },
                      {
                        "alternatives": [],
                        "children": [
                          {
                            "alternatives": [],
                            "children": [],
                            "component_type": "Keyword",
                            "key_value": false,
                            "name": "flags",
                            "repeatable": false,
                            "required": true
                          }
                        ],
                        "component_type": "Group",
                        "key_value": false,
                        "name": "",
                        "repeatable": false,
                        "required": false
                      }
                    ],
                    "line_contents": "flexai training stop NAME [flags]",
                    "parent_header": "Usage"
                  }
                ],
                "USAGE": []
              },
              "description": "Stop training",
              "name": "stop",
              "outputs": {
                "help_page": {
                  "status": 0,
                  "stderr": "",
                  "stdout": "Stop training\n\nUsage:\n  flexai training stop NAME [flags]\n\nFlags:\n  -h, --help   help for stop\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
                }
              },
              "parent": "training",
              "parent_header": "Available Commands"
            }
          },
          "FLAG": [
            {
              "data_type": null,
              "description": "help for training",
              "long": "--help",
              "parent_header": "Flags",
              "short": "-h"
            },
            {
              "data_type": null,
              "description": "enable verbose logging",
              "long": "--verbose",
              "parent_header": "Global Flags",
              "short": "-v"
            }
          ],
          "OTHER": [
            {
              "components": [
                {
                  "alternatives": [],
                  "children": [
                    {
                      "alternatives": [],
                      "children": [],
                      "component_type": "Keyword",
                      "key_value": false,
                      "name": "command",
                      "repeatable": false,
                      "required": true
                    }
                  ],
                  "component_type": "Group",
                  "key_value": false,
                  "name": "",
                  "repeatable": false,
                  "required": false
                }
              ],
              "line_contents": "flexai training [command]",
              "parent_header": "Usage"
            }
          ],
          "USAGE": []
        },
        "description": "Manage trainings operations",
        "name": "training",
        "outputs": {
          "help_page": {
            "status": 0,
            "stderr": "",
            "stdout": "Manage trainings operations including starting a new training.\n\nUsage:\n  flexai training [command]\n\nAvailable Commands:\n  checkpoints Display checkpoints captured from a given training\n  debug-ssh   Start an interactive training\n  delete      Deletes a training\n  fetch       Fetch a training result\n  inspect     inspect a training\n  list        List trainings\n  logs        Display logs for a given training\n  run         Train your model on cloud infrastructure\n  stop        Stop training\n\nFlags:\n  -h, --help   help for training\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging\n\nUse \"flexai training [command] --help\" for more information about a command."
          }
        },
        "parent": "flexai",
        "parent_header": "Commands"
      },
      "update": {
        "children": {
          "COMMAND": {},
          "FLAG": [
            {
              "data_type": null,
              "description": "help for update",
              "long": "--help",
              "parent_header": "Flags",
              "short": "-h"
            },
            {
              "data_type": null,
              "description": "enable verbose logging",
              "long": "--verbose",
              "parent_header": "Global Flags",
              "short": "-v"
            }
          ],
          "OTHER": [
            {
              "components": [
                {
                  "alternatives": [],
                  "children": [
                    {
                      "alternatives": [],
                      "children": [],
                      "component_type": "Keyword",
                      "key_value": false,
                      "name": "flags",
                      "repeatable": false,
                      "required": true
                    }
                  ],
                  "component_type": "Group",
                  "key_value": false,
                  "name": "",
                  "repeatable": false,
                  "required": false
                }
              ],
              "line_contents": "flexai update [flags]",
              "parent_header": "Usage"
            }
          ],
          "USAGE": []
        },
        "description": "Update to a newer version",
        "name": "update",
        "outputs": {
          "help_page": {
            "status": 0,
            "stderr": "",
            "stdout": "If a newer version is available, this tool is updated in place with it\n\nUsage:\n  flexai update [flags]\n\nFlags:\n  -h, --help   help for update\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
          }
        },
        "parent": "flexai",
        "parent_header": "General"
      },
      "version": {
        "children": {
          "COMMAND": {},
          "FLAG": [
            {
              "data_type": null,
              "description": "help for version",
              "long": "--help",
              "parent_header": "Flags",
              "short": "-h"
            },
            {
              "data_type": null,
              "description": "enable verbose logging",
              "long": "--verbose",
              "parent_header": "Global Flags",
              "short": "-v"
            }
          ],
          "OTHER": [
            {
              "components": [
                {
                  "alternatives": [],
                  "children": [
                    {
                      "alternatives": [],
                      "children": [],
                      "component_type": "Keyword",
                      "key_value": false,
                      "name": "flags",
                      "repeatable": false,
                      "required": true
                    }
                  ],
                  "component_type": "Group",
                  "key_value": false,
                  "name": "",
                  "repeatable": false,
                  "required": false
                }
              ],
              "line_contents": "flexai version [flags]",
              "parent_header": "Usage"
            }
          ],
          "USAGE": []
        },
        "description": "Get the version number of this tool",
        "name": "version",
        "outputs": {
          "help_page": {
            "status": 0,
            "stderr": "",
            "stdout": "Prints out the version number of the present tool\n\nUsage:\n  flexai version [flags]\n\nFlags:\n  -h, --help   help for version\n\nGlobal Flags:\n  -v, --verbose   enable verbose logging"
          }
        },
        "parent": "flexai",
        "parent_header": "General"
      }
    },
    "FLAG": [
      {
        "data_type": null,
        "description": "help for flexai",
        "long": "--help",
        "parent_header": "Flags",
        "short": "-h"
      },
      {
        "data_type": null,
        "description": "enable verbose logging",
        "long": "--verbose",
        "parent_header": "Flags",
        "short": "-v"
      }
    ],
    "OTHER": [
      {
        "components": [
          {
            "alternatives": [],
            "children": [
              {
                "alternatives": [],
                "children": [],
                "component_type": "Keyword",
                "key_value": false,
                "name": "command",
                "repeatable": false,
                "required": true
              }
            ],
            "component_type": "Group",
            "key_value": false,
            "name": "",
            "repeatable": false,
            "required": false
          }
        ],
        "line_contents": "flexai [command]",
        "parent_header": "Usage"
      }
    ],
    "USAGE": []
  },
  "description": "A CLI to run training jobs on FlexAI infrastructure",
  "name": "flexai",
  "outputs": {
    "help_page": {
      "status": 0,
      "stderr": "",
      "stdout": "A CLI to run training jobs on FlexAI infrastructure\n\nUsage:\n  flexai [command]\n\nGeneral\n  auth          Manage authentication operations\n  doctor        Check your system for potential problems.\n  update        Update to a newer version\n  version       Get the version number of this tool\n\nCommands\n  checkpoint    Manage checkpoints\n  dataset       Manage datasets\n  secret        Manage secrets\n  source        Manage model sources\n  storage       Manage storage providers\n  training      Manage trainings operations\n\nAdditional Commands:\n  completion    Generate the autocompletion script for the specified shell\n  help          Help about any command\n\nFlags:\n  -h, --help      help for flexai\n  -v, --verbose   enable verbose logging\n\nUse \"flexai [command] --help\" for more information about a command."
    }
  },
  "version": "1f6d9b02eb299beba49bcf5455fc637487ff0ecc"
}